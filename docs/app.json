[{"name":"server.R","content":"library(shiny)\nlibrary(openxlsx)\nlibrary(shinyjs)\n\noptions(shiny.maxRequestSize=30*1024^2)\n\nfunction(input, output, session) {\n  \n  \n    observe({\n      shinyjs::disable(\"downloadData\")\n      shinyjs::disable(\"downloadData2\")\n    })\n  \n    data <- reactive({\n      infile <- input$file1\n      if (is.null(infile)) {\n        return(NULL)\n      }\n\n      data_aux = read.xlsx(xlsxFile = input$file1$datapath[1])\n      if(length(input$file1$datapath) > 1) {\n        for(i in 2:length(input$file1$datapath)) {\n          data_aux = rbind(data_aux, read.xlsx(xlsxFile = input$file1$datapath[i]))\n        }\n      }\n      \n      # Manipulación de la base de datos\n      \n      ## Formato fecha y hora\n      data_aux$Fecha.y.hora = strptime(data_aux$Fecha.y.hora, format = \"%d-%m-%Y %H:%M:%S\")\n      \n      ## Creación de las columnas por separado: Fecha, día, hora y minuto\n      data_aux$Fecha = format(data_aux$Fecha.y.hora, \"%d-%m-%Y\")\n      data_aux$Ano = format(data_aux$Fecha.y.hora, \"%Y\")\n      data_aux$Mes = format(data_aux$Fecha.y.hora, \"%m\")\n      data_aux$Dia = format(data_aux$Fecha.y.hora, \"%d\")\n      data_aux$Hora = format(data_aux$Fecha.y.hora, \"%H\")\n      data_aux$Minuto = format(data_aux$Fecha.y.hora, \"%M\")\n      data_aux$Segundo = format(data_aux$Fecha.y.hora, \"%S\")\n      data_aux$Patente = toupper(data_aux$Patente)\n      data_aux$Patente = ifelse(is.na(data_aux$Patente), \"No registrada\", data_aux$Patente)\n      data_aux$RUT.Guardia = ifelse(is.na(data_aux$RUT.Guardia), \"No identificado\", data_aux$RUT.Guardia)\n      shinyjs::enable(\"downloadData\")\n      return(data_aux)\n    })\n    \n    output$info = renderText({\n      paste(paste(unique(data()$Condominio)), collapse = \", \")\n    })\n    \n    \n    output$downloadData <- downloadHandler(\n      filename = function() {\n        name_data = paste(\"Base de datos, fecha\", format(Sys.time(), \"%d-%m-%Y  %H:%M:%S\"))\n        paste(name_data, \".csv\", sep = \"\")\n      },\n      content = function(file) {\n        showModal(modalDialog(\"¡¡ Preparando la base para descargar !!\", footer = NULL))\n        on.exit(removeModal())\n        write.csv(data(), file, row.names = FALSE)\n      }\n    )\n    \n    #######################\n    # Segunda base de datos\n    #######################\n    \n    data2 <- reactive({\n      infile <- input$file2\n      fecha = input$calendar\n      if (is.null(infile)) {\n        return(NULL)\n      }\n      \n      data_aux = list(read.xlsx(xlsxFile = input$file2$datapath[1], colNames = F))\n      if(length(input$file2$datapath) > 1) {\n        for(i in 2:length(input$file2$datapath)) {\n          aux = read.xlsx(xlsxFile = input$file2$datapath[i], colNames = F)\n          data_aux = append(data_aux, list(aux))\n        }\n      }\n      \n      data_aux = lapply(X = data_aux, FUN = function(x){\n        inf = x[1,1]\n        \n        if(grepl(\"Listado de Residentes y Visitas habituales de \", inf)) {\n          inf = unlist(strsplit(inf, \"Listado de Residentes y Visitas habituales de \"))[2]  \n        }\n        \n        if(grepl(\"Listado de Colaboradores y Visitas habituales de \", inf)) {\n          inf = unlist(strsplit(inf, \"Listado de Colaboradores y Visitas habituales de \"))[2] \n        }\n        \n        ColNames = c(\"Área\",\t\"Tipo documento\",\t\"Documento\",\n                     \"Nombres\",\t\"Apellidos\",\t\"Correo electrónico\",\n                     \"Teléfono\", \"Tipo\",\t\"Responsable\")\n        x = x[-c(1,2),]\n        colnames(x) = ColNames\n        x$Condominio = inf\n        return(x)\n      })\n      \n      if(length(input$file2$datapath) > 1) {\n        for(i in 2:length(input$file2$datapath)) {\n          data_aux[[1]] = rbind(data_aux[[1]], data_aux[[i]])\n        }\n        data_aux = data_aux[[1]]\n      } else {\n        data_aux = data_aux[[1]]\n      }\n      \n      data_aux$Fecha = fecha\n      # data_aux$Fecha = strptime(data_aux$Fecha, format = \"%d/%m/%Y\")\n      data_aux$Ano = format(data_aux$Fecha, \"%Y\")\n      data_aux$Mes = format(data_aux$Fecha, \"%m\")\n      data_aux$Dia = format(data_aux$Fecha, \"%d\")\n      \n      shinyjs::enable(\"downloadData2\")\n      \n      return(data_aux)\n    })\n    \n    output$info2 = renderText({\n      paste(paste(unique(data2()$Condominio)), collapse = \", \")\n    })\n    \n    output$downloadData2 <- downloadHandler(\n      filename = function() {\n        name_data = paste(\"Base de datos, fecha\", format(Sys.time(), \"%d-%m-%Y  %H:%M:%S\"))\n        paste(name_data, \".xlsx\", sep = \"\")\n      },\n      content = function(file) {\n        showModal(modalDialog(\"¡¡ Preparando la base para descargar !!\", footer = NULL))\n        on.exit(removeModal())\n        write.xlsx(data2(), file)\n      }\n    )\n}","type":"text"},{"name":"ui.R","content":"library(shiny)\nlibrary(openxlsx)\nlibrary(shinyjs)\n\nInfo = textOutput(\"info\")\nInfo2 = textOutput(\"info2\")\n\nfluidPage(\n  shinyjs::useShinyjs(),\n  headerPanel(\"Tipo de ingreso\"),\n  br(),\n  fluidRow(style = 'border-bottom: 1px solid black',\n    column(\n      width = 4,\n      wellPanel(style = \"background: rgb(182, 115, 189)\",\n        fileInput(inputId = \"file1\", label = \"Subir archivos\", multiple = TRUE),\n        downloadButton(outputId = \"downloadData\", label = \"Descargar base unificada\")\n        )\n    ),\n     column(\n       width = 4,\n       h4(\"Información\", align = \"left\"), wellPanel(Info)\n    )\n  ),\n  headerPanel(\"Residentes y visitas\"),\n  br(),\n  fluidRow(\n    style = 'border-bottom: 1px solid black',\n    column(\n      width = 4,\n      wellPanel(style = \"background: rgb(182, 115, 189)\",\n        fileInput(inputId = \"file2\", label = \"Subir archivos\", multiple = TRUE),\n        dateInput(inputId = \"calendar\", label = \"Fecha de las bases\"),\n        downloadButton(outputId = \"downloadData2\", label = \"Descargar base unificada\")\n      )\n    ),\n    column(\n      width = 4,\n      h4(\"Información\", align = \"left\"), wellPanel(Info2)\n    )\n  )\n)\n","type":"text"}]
